{
  "exercise": "forth",
  "version": "1.7.1",
  "comments": [
    "The cases are split into multiple sections, all with the same structure.",
    "In all cases, the `expected` key is the resulting stack",
    "after executing the Forth program contained in the `input` key, unless an 'error' exists."
  ],
  "cases": [
    {
      "description": "parsing and numbers",
      "cases": [
        {
          "uuid": "640ccf94-088f-4870-80be-0b02b48b69dc",
          "description": "numbers just get pushed onto the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 3 4 5"]
          },
          "expected": [1, 2, 3, 4, 5]
        }
      ]
    },
    {
      "description": "addition",
      "cases": [
        {
          "uuid": "54545098-0088-4e10-be3e-d79716cd4d1f",
          "description": "can add two numbers",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 +"]
          },
          "expected": [3]
        },
        {
          "uuid": "45e0768e-b627-4100-b421-e6d0c31c4e61",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["+"]
          },
          "expected": {
            "error": "empty stack"
          }
        },
        {
          "uuid": "5f60b19a-7da1-400d-a9af-0568fa2f4570",
          "description": "errors if there is only one value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 +"]
          },
          "expected": {
            "error": "only one value on the stack"
          }
        }
      ]
    },
    {
      "description": "subtraction",
      "cases": [
        {
          "uuid": "f91f83b5-816c-42c3-acb4-7c098a0f8216",
          "description": "can subtract two numbers",
          "property": "evaluate",
          "input": {
            "instructions": ["3 4 -"]
          },
          "expected": [-1]
        },
        {
          "uuid": "572d3636-0e64-496f-9b5a-4b7e4129f358",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["-"]
          },
          "expected": {
            "error": "empty stack"
          }
        },
        {
          "uuid": "6cc7c738-a543-41c2-9948-df7d140523fe",
          "description": "errors if there is only one value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 -"]
          },
          "expected": {
            "error": "only one value on the stack"
          }
        }
      ]
    },
    {
      "description": "multiplication",
      "cases": [
        {
          "uuid": "da766a49-154d-40cc-9ed2-f48a2de35ded",
          "description": "can multiply two numbers",
          "property": "evaluate",
          "input": {
            "instructions": ["2 4 *"]
          },
          "expected": [8]
        },
        {
          "uuid": "3148c25d-2c1a-49af-9404-c52bd57b8541",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["*"]
          },
          "expected": {
            "error": "empty stack"
          }
        },
        {
          "uuid": "81e73cc9-a1ac-4705-ac28-c398b10c6db3",
          "description": "errors if there is only one value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 *"]
          },
          "expected": {
            "error": "only one value on the stack"
          }
        }
      ]
    },
    {
      "description": "division",
      "cases": [
        {
          "uuid": "37905d74-2ccf-4844-b5ce-9e1dcd25f8d2",
          "description": "can divide two numbers",
          "property": "evaluate",
          "input": {
            "instructions": ["12 3 /"]
          },
          "expected": [4]
        },
        {
          "uuid": "1f5ee728-a13d-4f3c-a46c-3d1181c1ba16",
          "description": "performs integer division",
          "property": "evaluate",
          "input": {
            "instructions": ["8 3 /"]
          },
          "expected": [2]
        },
        {
          "uuid": "3ef986be-60d2-459d-bc0b-00f1d8db40c4",
          "description": "errors if dividing by zero",
          "property": "evaluate",
          "input": {
            "instructions": ["4 0 /"]
          },
          "expected": {
            "error": "divide by zero"
          }
        },
        {
          "uuid": "9e8ed0a3-3cfc-4377-9756-ee4a98f3e06c",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["/"]
          },
          "expected": {
            "error": "empty stack"
          }
        },
        {
          "uuid": "64eb1406-9178-4ae5-b501-31888f4a4db2",
          "description": "errors if there is only one value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 /"]
          },
          "expected": {
            "error": "only one value on the stack"
          }
        }
      ]
    },
    {
      "description": "combined arithmetic",
      "cases": [
        {
          "uuid": "aefbbd10-c67c-4465-9386-51d8f73a8bec",
          "description": "addition and subtraction",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 + 4 -"]
          },
          "expected": [-1]
        },
        {
          "uuid": "db6b3a63-28d0-4231-a06e-f395d5841c7b",
          "description": "multiplication and division",
          "property": "evaluate",
          "input": {
            "instructions": ["2 4 * 3 /"]
          },
          "expected": [2]
        }
      ]
    },
    {
      "description": "dup",
      "cases": [
        {
          "uuid": "81da4a7f-2caa-4ded-a94d-9808a8324109",
          "description": "copies a value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 dup"]
          },
          "expected": [1, 1]
        },
        {
          "uuid": "9b3b4433-fb24-4d8f-9c96-ee509c85ad29",
          "description": "copies the top value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 dup"]
          },
          "expected": [1, 2, 2]
        },
        {
          "uuid": "6cb20956-d9f7-4508-8ab5-e6e9c7176278",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["dup"]
          },
          "expected": {
            "error": "empty stack"
          }
        }
      ]
    },
    {
      "description": "drop",
      "cases": [
        {
          "uuid": "7d683f1e-5396-4563-9a28-5ce611949d76",
          "description": "removes the top value on the stack if it is the only one",
          "property": "evaluate",
          "input": {
            "instructions": ["1 drop"]
          },
          "expected": []
        },
        {
          "uuid": "70a9ef20-a05f-41aa-a933-307ab5c2c9fd",
          "description": "removes the top value on the stack if it is not the only one",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 drop"]
          },
          "expected": [1]
        },
        {
          "uuid": "56e1615c-d660-4770-bc66-bd8709de2060",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["drop"]
          },
          "expected": {
            "error": "empty stack"
          }
        }
      ]
    },
    {
      "description": "swap",
      "cases": [
        {
          "uuid": "f38437d9-c1e9-4e21-8369-89f662369a05",
          "description": "swaps the top two values on the stack if they are the only ones",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 swap"]
          },
          "expected": [2, 1]
        },
        {
          "uuid": "b4f5b62a-fcdf-4b4e-b8ae-f40dc42b6594",
          "description": "swaps the top two values on the stack if they are not the only ones",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 3 swap"]
          },
          "expected": [1, 3, 2]
        },
        {
          "uuid": "4949a718-901c-4107-9efc-64bc9363be1c",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["swap"]
          },
          "expected": {
            "error": "empty stack"
          }
        },
        {
          "uuid": "78bd08db-714a-4284-b9d7-b3cab589120c",
          "description": "errors if there is only one value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 swap"]
          },
          "expected": {
            "error": "only one value on the stack"
          }
        }
      ]
    },
    {
      "description": "over",
      "cases": [
        {
          "uuid": "ffefa5df-fe99-4457-b0cf-0bb3e0375855",
          "description": "copies the second element if there are only two",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 over"]
          },
          "expected": [1, 2, 1]
        },
        {
          "uuid": "4d591de2-c4f7-4d7a-a41c-373d001d47de",
          "description": "copies the second element if there are more than two",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 3 over"]
          },
          "expected": [1, 2, 3, 2]
        },
        {
          "uuid": "6bcb7ff7-3442-4d03-ad92-5eaf8fb27ec1",
          "description": "errors if there is nothing on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["over"]
          },
          "expected": {
            "error": "empty stack"
          }
        },
        {
          "uuid": "6062766c-bf91-4e5b-a52e-e4fc027c1d30",
          "description": "errors if there is only one value on the stack",
          "property": "evaluate",
          "input": {
            "instructions": ["1 over"]
          },
          "expected": {
            "error": "only one value on the stack"
          }
        }
      ]
    },
    {
      "description": "user-defined words",
      "cases": [
        {
          "uuid": "5bc0f29f-f0a6-47c6-ae55-59184f4ee547",
          "description": "can consist of built-in words",
          "property": "evaluate",
          "input": {
            "instructions": [": dup-twice dup dup ;", "1 dup-twice"]
          },
          "expected": [1, 1, 1]
        },
        {
          "uuid": "06c7b8f6-5d12-43e9-8659-b0dbedbf2651",
          "description": "execute in the right order",
          "property": "evaluate",
          "input": {
            "instructions": [": countup 1 2 3 ;", "countup"]
          },
          "expected": [1, 2, 3]
        },
        {
          "uuid": "b38962dd-74d5-4db6-bd06-acc4972be166",
          "description": "can override other user-defined words",
          "property": "evaluate",
          "input": {
            "instructions": [": foo dup ;", ": foo dup dup ;", "1 foo"]
          },
          "expected": [1, 1, 1]
        },
        {
          "uuid": "032c53ef-13c9-4e7e-9f5e-ec0cfd2e12b0",
          "description": "can override built-in words",
          "property": "evaluate",
          "input": {
            "instructions": [": swap dup ;", "1 swap"]
          },
          "expected": [1, 1]
        },
        {
          "uuid": "ab95c02c-a3ce-4efd-9ea9-bf2b757a6fb0",
          "description": "can override built-in operators",
          "property": "evaluate",
          "input": {
            "instructions": [": + * ;", "3 4 +"]
          },
          "expected": [12]
        },
        {
          "uuid": "ff43b753-86e2-46c6-b0e1-6c74d1bfa126",
          "description": "can use different words with the same name",
          "property": "evaluate",
          "input": {
            "instructions": [": foo 5 ;", ": bar foo ;", ": foo 6 ;", "bar foo"]
          },
          "expected": [5, 6]
        },
        {
          "uuid": "b08bef67-cfaa-48e2-a7ed-515e268d8657",
          "description": "can define word that uses word with the same name",
          "property": "evaluate",
          "input": {
            "instructions": [": foo 10 ;", ": foo foo 1 + ;", "foo"]
          },
          "expected": [11]
        },
        {
          "uuid": "e1219706-eac2-41fa-a703-23d4f75dbc65",
          "description": "cannot redefine numbers",
          "property": "evaluate",
          "input": {
            "instructions": [": 1 2 ;"]
          },
          "expected": {
            "error": "illegal operation"
          }
        },
        {
          "uuid": "90ae33a6-5ce1-4bba-a0cd-c0f371c6cb21",
          "description": "errors if executing a non-existent word",
          "property": "evaluate",
          "input": {
            "instructions": ["foo"]
          },
          "expected": {
            "error": "undefined operation"
          }
        }
      ]
    },
    {
      "description": "case-insensitivity",
      "cases": [
        {
          "uuid": "20d0ba1a-03a3-4f4e-bf56-747bc49291ce",
          "description": "DUP is case-insensitive",
          "property": "evaluate",
          "input": {
            "instructions": ["1 DUP Dup dup"]
          },
          "expected": [1, 1, 1, 1]
        },
        {
          "uuid": "bf02ebb0-1a1f-4f8d-91c8-f4fddae6b900",
          "description": "DROP is case-insensitive",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 3 4 DROP Drop drop"]
          },
          "expected": [1]
        },
        {
          "uuid": "1b10a48b-f03e-4170-aa0d-09b52a232316",
          "description": "SWAP is case-insensitive",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 SWAP 3 Swap 4 swap"]
          },
          "expected": [2, 3, 4, 1]
        },
        {
          "uuid": "dbd71a96-33c6-4dba-89c4-ae274285ac6c",
          "description": "OVER is case-insensitive",
          "property": "evaluate",
          "input": {
            "instructions": ["1 2 OVER Over over"]
          },
          "expected": [1, 2, 1, 2, 1]
        },
        {
          "uuid": "5f0907ab-26ab-4208-b259-63445b287f4c",
          "description": "user-defined words are case-insensitive",
          "property": "evaluate",
          "input": {
            "instructions": [": foo dup ;", "1 FOO Foo foo"]
          },
          "expected": [1, 1, 1, 1]
        },
        {
          "uuid": "73265d51-ad35-4cf4-af84-ea94cbbc1cc6",
          "description": "definitions are case-insensitive",
          "property": "evaluate",
          "input": {
            "instructions": [": SWAP DUP Dup dup ;", "1 swap"]
          },
          "expected": [1, 1, 1, 1]
        }
      ]
    }
  ]
}
